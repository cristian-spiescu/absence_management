<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		  xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  creationComplete="creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.crispico.absence_management.model.Absence;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.formatters.DateFormatter;
			
			
			private var list:ArrayCollection = new ArrayCollection();
			
			private function creationCompleteHandler(event:FlexEvent):void {
				absenceService.getAllAbsences();
			}
			
			private function addClickHandler(event:MouseEvent):void {
				var form: AddAbsenceForm = new AddAbsenceForm();
				form.absence = new Absence();
				PopUpManager.addPopUp(form, this, true);
				PopUpManager.centerPopUp(form);
			}
			
			private function editClickHandler(event:MouseEvent):void {
				var form:AbsenceForm = new AbsenceForm();
				form.absence = Absence(grid.selectedItem);
				PopUpManager.addPopUp(form, this, true);
				PopUpManager.centerPopUp(form);
			}
			
			private function deleteClickHandler(event:MouseEvent):void {
				var form:DeleteAbsenceForm = new DeleteAbsenceForm();
				form.absence = Absence(grid.selectedItem);
				PopUpManager.addPopUp(form, this, true);
				PopUpManager.centerPopUp(form);
			}
			
			private function sayHelloResultHandler(event:ResultEvent):void {
				//				Alert.show("" + event.result);
			}
			
			private function absenceServiceFaultHandler(event:FaultEvent):void {
				Alert.show("Service invocation error: " + event.fault.faultString);				
			}
			
			private function getAllAbsencesResultHandler(event:ResultEvent):void {
				var formatter : DateFormatter;
				formatter = new DateFormatter();
				formatter.formatString = "DD MM YYYY";
				
				grid.dataProvider = event.result;
			}	
			
			private function saveResultHandler(event:ResultEvent):void{
				ExternalInterface.call("document.location.reload",true);
			}
			
			private function deleteAbsResultHandler(event:ResultEvent):void{
				ExternalInterface.call("document.location.reload",true);
			}
			
			private function editResultHandler(event:ResultEvent):void{
				ExternalInterface.call("document.location.reload",true);
			}
			
			public function formatDate(item:Object,column:DataGridColumn):String {
				return df.format(item[column.dataField]);
			} 
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ChannelSet id="channelSet">
			<s:AMFChannel url="messagebroker/remoting-amf"/>
		</s:ChannelSet>
		<mx:RemoteObject id="absenceService" channelSet="{channelSet}" destination="absenceService" fault="absenceServiceFaultHandler(event)">
			<mx:method name="sayHello" result="sayHelloResultHandler(event)"/>
			<mx:method name="getAllAbsences" result="getAllAbsencesResultHandler(event)"/>
			<mx:method name="save" result="saveResultHandler(event)"/>
			<mx:method name="editAbs" result="editResultHandler(event)"/>
			<mx:method name="deleteAbs" result="deleteAbsResultHandler(event)"/>
		</mx:RemoteObject>
		<mx:DateFormatter id="df" formatString="DD/MM/YYYY"/> 
	</fx:Declarations>
	<s:HGroup>
		<s:Button label="Add" click="addClickHandler(event);  grid.selectedIndex = -1"/>
		<s:Button label="Edit" click="editClickHandler(event)" enabled="{grid.selectedItem != null}"/>
		<s:Button label="Delete" click="deleteClickHandler(event)" enabled="{grid.selectedItem != null}"/>
	</s:HGroup>
	
	
	<mx:DataGrid id="grid" width="100%" height="100%" allowMultipleSelection="true">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="ID"/>
			<mx:DataGridColumn dataField="employee.id" headerText="ID Employee"/>
			<mx:DataGridColumn dataField="employee.firstName" headerText="First Name"/>
			<mx:DataGridColumn dataField="employee.lastName" headerText="Last Name"/>
			<mx:DataGridColumn dataField="absenceType.absenceType" headerText="Absence Type"/>
			<mx:DataGridColumn  labelFunction="formatDate" dataField="startDate" headerText="Start Date"/>
			<mx:DataGridColumn  labelFunction="formatDate" dataField="endDate" headerText="End Date"/>
		</mx:columns>
	</mx:DataGrid>
	
</s:VGroup>
