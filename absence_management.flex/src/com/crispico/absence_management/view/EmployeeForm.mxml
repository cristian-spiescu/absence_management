<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 title="{'Edit ' + employee.firstName + ' ' + employee.lastName}" 
		 close="PopUpManager.removePopUp(this)"
		 creationComplete="employeeFormCreationCompleteHandler(event)" xmlns:chart="com.crispico.chart.*">
	<fx:Script>
		<![CDATA[
			import com.crispico.absence_management.model.Absence;
			import com.crispico.absence_management.model.Employee;
			import com.crispico.chart.IntervalData;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
					
			[Bindable]
			public var employee:Employee;	
			
			/* Parent window is EmployeeTable */
			[Bindable]
			public var employeeTable:EmployeeTable;
								
			[Bindable]
			public var absenceList: ArrayCollection = new ArrayCollection();
			
			[Bindable]
			public var intervalDataList : ArrayCollection = new ArrayCollection();
			
			private var _colors : Array = new Array(0xBBCCBB, 0xCCBBCC, 0xCCCCBB, 0x11FF11, 0xFF1111, 0x1111FF, 0xDDDDDD);
					
			/* Runs at creationComplete */
			private function employeeFormCreationCompleteHandler(event:FlexEvent):void {
				absenceService.getAbsencesByEmployee(employee);	
			}
			
			/* Handles the result of calling getAbsencesByEmployees from Java */
			private function getAbsencesByEmployeeResultHandler(event:ResultEvent):void {
				var absenceListAbsence:ArrayCollection = ArrayCollection(event.result);
				
				for each(var absence:Absence in absenceListAbsence) {
					absenceList.addItem(absence);
				}

				employeeFormDataGrid.dataProvider = absenceList;
			}
			
			/* Date Formatters */
			private function startDateFormatter(item:Object, column:DataGridColumn):String { 
				return employeeDateFormatter.format(item.startDate); 
			}
			
			private function endDateFormatter(item:Object, column:DataGridColumn):String { 
				return employeeDateFormatter.format(item.endDate); 
			}
			
			private function addAbsenceClickHandler(event:MouseEvent):void {
				var addAbsenceEmployeeForm:AddAbsenceForm = new AddAbsenceForm();
				addAbsenceEmployeeForm.employeeForm = this;
				
				PopUpManager.addPopUp(addAbsenceEmployeeForm, this, true);
				PopUpManager.centerPopUp(addAbsenceEmployeeForm);
			}
			
			private function deleteAbsenceClickHandler(event:MouseEvent):void {
				var deleteAbsenceForm:DeleteAbsenceForm = new DeleteAbsenceForm();
				deleteAbsenceForm.employeeForm = this;
				
				PopUpManager.addPopUp(deleteAbsenceForm, this, true);
				PopUpManager.centerPopUp(deleteAbsenceForm);
			}
			
			protected function viewChartClickHandler(event:MouseEvent):void {
				intervalDataList.removeAll();
				
				for each(var absence:Absence in absenceList) {					
					/* Populate intervalData */
					var intervalData : IntervalData = new IntervalData();
					/* get random index for color from _colors */
					var index : int = Math.floor(Math.random() * _colors.length);
					
					intervalData.color = _colors[index];
					intervalData.value = Absence.getDaysBetweenDates(absence.startDate, absence.endDate);
					intervalDataList.addItem(intervalData);
				}
			}
			
			protected function maxIntervalChangeEnterHandler(event:FlexEvent):void {
				absenceChart.maxInterval = Number(modifyInterval.text);
			}
			
		]]>
	</fx:Script>
		
	<fx:Declarations>
		<s:ChannelSet id="channelSet">
			<s:AMFChannel url="messagebroker/remoting-amf"/>
		</s:ChannelSet>
		
		<mx:RemoteObject id="absenceService" destination="absenceService" channelSet="{channelSet}">
			
			<mx:method name="getAbsencesByEmployee" result="getAbsencesByEmployeeResultHandler(event)">
				<mx:arguments>
					<arg1>{employee}</arg1>
				</mx:arguments>
			</mx:method>				
		</mx:RemoteObject>
		
		<s:DateTimeFormatter id="employeeDateFormatter"
							 dateTimePattern="dd-MMM-yyyy"/> 
		
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	
	<s:Form>
	
		<s:HGroup gap="100" 
				  paddingLeft="15" 
				  width="100%">
			
			<s:BitmapImage source="images/info_user.png"
						   width="120" height="120"/>
			
			<s:VGroup horizontalAlign="right">
				
				<s:FormItem label="First Name">
					<s:TextInput text="@{employee.firstName}" editable="false"/>
				</s:FormItem>
				
				<s:FormItem label="Last Name" >
					<s:TextInput text="@{employee.lastName}" editable="false"/>		
				</s:FormItem>
				
				<s:FormItem label="ID" >
					<s:TextInput text="{employee.id}" editable="false"/>
				</s:FormItem>
				
			</s:VGroup>
	
		</s:HGroup>
		
		<s:VGroup width="100%">
	
			<s:FormItem>
				<s:Button label="View Chart" 
						  click="viewChartClickHandler(event)"/>
			</s:FormItem>
			
			<s:HGroup>
				<s:FormItem label="Resize Interval">
					<s:TextInput id="modifyInterval"
								 enter="maxIntervalChangeEnterHandler(event)"/>
				</s:FormItem>
			</s:HGroup>
			
			<s:FormItem label="Chart"
						width="100%">
				<chart:Chart id="absenceChart" 
							 maxInterval="21"
							 dataProvider="{intervalDataList}"/>
			</s:FormItem>
			
		</s:VGroup>
					
		<s:HGroup horizontalAlign="center" verticalAlign="middle">
		
			<s:FormItem>
				<s:Button label="Add Absence" fontWeight="bold" click="addAbsenceClickHandler(event)"/>
			</s:FormItem>
			
			<s:FormItem>
				<s:Button label="Delete Absence" 
						  enabled="{employeeFormDataGrid.selectedItem != null}"
						  fontWeight="bold" 
						  click="deleteAbsenceClickHandler(event)"/>
			</s:FormItem>
			
		</s:HGroup>
			
		<s:FormItem>
			<s:Panel title="Absences">
				<mx:DataGrid id="employeeFormDataGrid">
						<mx:columns>
							<mx:DataGridColumn dataField="absenceType.absenceName" 
											   headerText="Type"/>
							<mx:DataGridColumn dataField="startDate" 
											   headerText="Start Date"
											   labelFunction="startDateFormatter"
											   width="250"/>
							<mx:DataGridColumn dataField="endDate" 
											   headerText="End Date"
											   labelFunction="endDateFormatter"
											   width="250"/>
						</mx:columns>
				</mx:DataGrid>
			</s:Panel>
		</s:FormItem>
			
	</s:Form>

</s:TitleWindow>
