<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="employeeService.getAllEmployees()">
	
	<fx:Script>
		<![CDATA[
			import com.crispico.absence_management.model.Employee;
			import com.crispico.absence_management.view.editEmployee;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.core.FlexGlobals;
			
			
			private function addClickHandler(event:MouseEvent):void {
				var form:addEmployee = new addEmployee();
				form.grid = grid;
				PopUpManager.addPopUp(form, FlexGlobals.topLevelApplication as DisplayObject, true);
				PopUpManager.centerPopUp(form);	
			}
			
			private function editClickHandler(event:MouseEvent):void {
				var form:editEmployee = new editEmployee();
				form.idEdit = getCellForEdit();
				form.grid = grid;
				PopUpManager.addPopUp(form, FlexGlobals.topLevelApplication as DisplayObject, true);
				PopUpManager.centerPopUp(form);	
			}
			
			private function employeeServiceFaultHandler(event:FaultEvent):void {
				Alert.show("Service invocation error: " + event.fault.faultString);				
			}
			
			private function getAllEmployeesResultHandler(event:ResultEvent):void {
				
				grid.dataProvider = event.result;
			}	
			//returneaza id angajat selectat pentru stergere
			private function getCellForDelete():Number{
				var e:Employee = Employee(grid.selectedItem);
				return e.id;
			}
			private function getCellForEdit():Number{
				var e:Employee = Employee(grid.selectedItem);
				return e.id;
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:ChannelSet id="channelSet">
			<s:AMFChannel url="messagebroker/remoting-amf"/>
		</s:ChannelSet>
		<mx:RemoteObject id="employeeService" destination="employeeService" channelSet="{channelSet}" fault="employeeServiceFaultHandler(event)">
			<mx:method name="deleteEmployee"/>
			<mx:method name="addEmployee"/>
			<mx:method name="getAllEmployees" result="getAllEmployeesResultHandler(event)"/>
		</mx:RemoteObject>
	</fx:Declarations>
	<s:HGroup>
		<mx:Button label="Add" click="addClickHandler(event)"/>
		<mx:Button label="Delete" id="deleteButton" enabled = "{grid.selectedItem != null}" click="employeeService.deleteEmployee(getCellForDelete()), employeeService.getAllEmployees()"/> 
		<mx:Button label="Edit" id="editButton" enabled = "{grid.selectedItem != null}" click="editClickHandler(event)"/>
		<mx:Button label="Refresh Employees" click="employeeService.getAllEmployees()"/>
	</s:HGroup>
	<mx:DataGrid id="grid" width="100%" height="100%" allowMultipleSelection="false">
		<mx:columns>
			<mx:DataGridColumn dataField="id" headerText="ID" />
			<mx:DataGridColumn dataField="firstName" headerText="First Name" />
			<mx:DataGridColumn dataField="lastName" headerText="Last Name"/>
		</mx:columns>
	</mx:DataGrid>
</s:VGroup>
